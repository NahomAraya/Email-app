{"version":3,"sources":["features/userSlice.js","firebase/firebase.js","components/Header.js","components/SidebarOption.js","features/mailSlice.js","components/Sidebar.js","components/Mail.js","components/Section.js","components/EmailRow.js","components/MailList.js","components/SendMail.js","components/Login.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["userSlice","createSlice","name","initialState","user","status","reducers","login","state","action","payload","logout","actions","selectUser","db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","auth","provider","GoogleAuthProvider","Header","useSelector","dispatch","useDispatch","className","IconButton","src","alt","placeholder","type","Avatar","onClick","signOut","then","photoURL","SidebarOption","Icon","title","number","selected","mailSlice","selectedMail","sendMessageisOpen","selectMail","openSendMessage","closeSendMessage","selectSendMessageisOpen","mail","selectOpenMail","Sidebar","useState","numbers","setNumbers","useEffect","collection","get","querySnapshot","size","Button","startIcon","fontSize","InboxIcon","Mail","history","useHistory","push","subject","time","message","Section","color","style","borderBottom","EmailRow","id","Checkbox","MailList","emails","setEmails","orderBy","onSnapshot","snapshot","docs","map","doc","data","PeopleIcon","LocalOfferIcon","to","timestamp","Date","seconds","toUTCString","SendMail","useForm","register","handleSubmit","errors","watch","formState","onSubmit","formData","console","log","add","FieldValue","serverTimestamp","required","variant","Login","signInWithPopup","displayName","email","catch","error","alert","App","onAuthStateChanged","path","store","configureStore","reducer","mailReducer","userReducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"uXAOaA,EAAYC,YAAY,CACnCC,KAAM,OACNC,aAPmB,CACnBC,KAAM,KACNC,OAAQ,QAORC,SAAU,CACRC,MAAO,SAACC,EAAOC,GACbD,EAAMJ,KAAOK,EAAOC,SAEtBC,OAAQ,SAACH,GACPA,EAAMJ,KAAO,SASZ,EAA0BJ,EAAUY,QAA5BL,EAAR,EAAQA,MAAOI,EAAf,EAAeA,OAETE,EAAa,SAACL,GAAD,OAAWA,EAAMJ,KAAKA,MAGjCJ,IAAf,Q,QClBQc,EADcC,IAASC,cATR,CACnBC,OAAQ,0CACRC,WAAY,kCACZC,UAAW,kBACXC,cAAe,8BACfC,kBAAmB,eACnBC,MAAO,8CAIcC,YACjBC,EAAOT,IAASS,OAChBC,EAAW,IAAIV,IAASS,KAAKE,mB,OCgDtBC,MA/Cf,WACI,IAAMvB,EAAOwB,YAAYf,GACnBgB,EAAWC,cASjB,OACI,sBAAKC,UAAU,SAAf,UACI,sBAAKA,UAAU,cAAf,UACI,cAACC,EAAA,EAAD,UACI,cAAC,IAAD,MAEJ,qBAAKC,IAAI,0FAA0FC,IAAI,QAE3G,sBAAKH,UAAU,gBAAf,UACI,cAAC,IAAD,IACA,uBAAOI,YAAY,SAASC,KAAK,SACjC,cAAC,IAAD,CAAmBL,UAAU,oBAGjC,sBAAKA,UAAU,eAAf,UACI,cAACC,EAAA,EAAD,UACI,cAAC,IAAD,MAEJ,cAACA,EAAA,EAAD,UACA,cAAC,IAAD,MAEA,cAACA,EAAA,EAAD,UACA,cAACK,EAAA,EAAD,CAAQC,QA9BJ,WACZd,EAAKe,UAAUC,MAAK,WAChBX,EAASlB,SA4BqBsB,IAAG,OAAE7B,QAAF,IAAEA,OAAF,EAAEA,EAAMqC,oB,0CCnCtCC,MAVf,YAAyD,IAAjCC,EAAgC,EAAhCA,KAAMC,EAA0B,EAA1BA,MAAOC,EAAmB,EAAnBA,OAAQC,EAAW,EAAXA,SACzC,OACI,sBAAKf,UAAS,wBAAmBe,GAAY,yBAA7C,UACI,cAACH,EAAD,IACA,6BAAKC,IACL,4BAAIC,Q,oECCHE,EAAY9C,YAAY,CACnCC,KAAM,OACNC,aARmB,CACnB6C,aAAc,KACdC,mBAAmB,GAQnB3C,SAAU,CAER4C,WAAY,SAAC1C,EAAOI,GAClBJ,EAAMwC,aAAepC,EAAQF,SAE/ByC,gBAAiB,SAAC3C,GAEhBA,EAAMyC,mBAAoB,GAE5BG,iBAAkB,SAAC5C,GACjBA,EAAMyC,mBAAoB,MASzB,EAA4DF,EAAUnC,QAA7DsC,EAAT,EAASA,WAAYC,EAArB,EAAqBA,gBAAiBC,EAAtC,EAAsCA,iBAGhCC,EAA0B,SAAC7C,GAAD,OAAWA,EAAM8C,KAAKL,mBAChDM,EAAiB,SAAC/C,GAAD,OAAWA,EAAM8C,KAAKN,cAGrCD,IAAf,QCeeS,OAzCf,WACI,IAAM3B,EAAWC,cACjB,EAA8B2B,mBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KAOA,OANAC,qBAAU,WACN9C,EAAG+C,WAAW,UAAUC,MAAMtB,MAAK,SAASuB,GACxCJ,EAAWI,EAAcC,WAE9B,IAGC,sBAAKjC,UAAU,UAAf,UACI,cAACkC,EAAA,EAAD,CACAC,UAAW,cAAC,IAAD,CAASC,SAAS,UAC7BpC,UAAU,kBACVO,QAAW,WAAOT,EAASsB,MAH3B,qBAOA,cAAC,EAAD,CAAeR,KAAMyB,IACrBxB,MAAM,QACNC,OAAQa,EACRZ,UAAU,IAEV,qBAAKf,UAAU,iBAAf,SACI,sBAAKA,UAAU,sBAAf,UACI,cAACC,EAAA,EAAD,UACI,cAAC,IAAD,MAEJ,cAACA,EAAA,EAAD,UACI,cAAC,IAAD,MAEJ,cAACA,EAAA,EAAD,UACI,cAAC,IAAD,e,0ICeTqC,OA9Cf,WACI,IAAMC,EAAUC,eACVvB,EAAepB,YAAY2B,GAEjC,OACI,sBAAKxB,UAAU,OAAf,UACI,sBAAKA,UAAU,aAAf,UACI,sBAAKA,UAAU,iBAAf,UACI,cAACC,EAAA,EAAD,UACI,cAAC,KAAD,CAAeM,QAAS,kBAAMgC,EAAQE,KAAK,UAE/C,cAACxC,EAAA,EAAD,UACI,cAAC,KAAD,MAEJ,cAACA,EAAA,EAAD,UACI,cAAC,KAAD,SAKR,sBAAKD,UAAU,kBAAf,UACI,cAACC,EAAA,EAAD,UACI,cAAC,KAAD,MAEJ,cAACA,EAAA,EAAD,UACI,cAAC,KAAD,YAKZ,sBAAKD,UAAU,YAAf,UACI,sBAAKA,UAAU,kBAAf,UACI,oCAAKiB,QAAL,IAAKA,OAAL,EAAKA,EAAcyB,UACnB,cAAC,KAAD,CAAoB1C,UAAU,mBAC9B,4BAAI,MACJ,mCAAIiB,QAAJ,IAAIA,OAAJ,EAAIA,EAAcJ,QAClB,mBAAGb,UAAU,YAAb,gBAA0BiB,QAA1B,IAA0BA,OAA1B,EAA0BA,EAAc0B,UAE5C,qBAAK3C,UAAU,mBAAf,SACI,mCAAIiB,QAAJ,IAAIA,OAAJ,EAAIA,EAAc2B,mB,wIClCvBC,OAhBf,YAAkD,IAAhCjC,EAA+B,EAA/BA,KAAMC,EAAyB,EAAzBA,MAAOiC,EAAkB,EAAlBA,MAAO/B,EAAW,EAAXA,SAClC,OACI,sBAAKf,UAAS,iCAA4Be,GAAY,oCACtDgC,MAAO,CACHC,aAAa,aAAD,OAAeF,GAC3BA,MAAM,IAAD,OAAM/B,GAAY+B,IAH3B,UAMI,cAAClC,EAAD,IACA,6BAAKC,Q,oBCuCFoC,OA3Cf,YAAwD,IAArCC,EAAoC,EAApCA,GAAIrC,EAAgC,EAAhCA,MAAO6B,EAAyB,EAAzBA,QAASE,EAAgB,EAAhBA,QAASD,EAAO,EAAPA,KACtCJ,EAAUC,eACV1C,EAAWC,cAejB,OAEI,sBAAMQ,QAhBO,WACbT,EACIqB,EAAW,CACP+B,KACArC,QACA6B,UACAE,UACAD,UAGRJ,EAAQE,KAAK,UAMYzC,UAAU,eAAnC,UACI,sBAAKA,UAAU,sBAAf,UACI,cAACmD,GAAA,EAAD,IACA,cAAClD,EAAA,EAAD,UACI,cAAC,KAAD,SAIR,oBAAID,UAAU,oBAAd,SAAmCa,IAEnC,qBAAKb,UAAU,sBAAf,SACI,+BACK0C,EAAS,IACV,uBAAM1C,UAAU,sBAAhB,cAAwC4C,UAKjD,mBAAG5C,UAAU,mBAAb,SAAiC2C,QC8B7BS,OA5Df,WACI,MAA4B1B,mBAAS,IAArC,mBAAO2B,EAAP,KAAeC,EAAf,KAYA,OAXAzB,qBAAU,WACN9C,EAAG+C,WAAW,UAAUyB,QAAQ,YAAa,QAAQC,YACjD,SAACC,GAAD,OAAcH,EACVG,EAASC,KAAKC,KAAI,SAACC,GAAD,MAAU,CACxBV,GAAIU,EAAIV,GACRW,KAAMD,EAAIC,iBAKvB,IAEC,sBAAK7D,UAAU,WAAf,UACI,sBAAKA,UAAU,oBAAf,UACI,sBAAKA,UAAU,wBAAf,UACI,cAACmD,GAAA,EAAD,IACA,cAAClD,EAAA,EAAD,UACI,cAAC,IAAD,MAEJ,cAACA,EAAA,EAAD,UACI,cAAC,KAAD,MAEJ,cAACA,EAAA,EAAD,UACI,cAAC,KAAD,SAGR,sBAAKD,UAAU,yBAAf,UACI,cAACC,EAAA,EAAD,UACI,cAAC,KAAD,MAEJ,cAACA,EAAA,EAAD,UACI,cAAC,KAAD,YAKZ,sBAAKD,UAAU,mBAAf,UACI,cAAC,GAAD,CAASY,KAAMyB,IAAWxB,MAAM,UAAUiC,MAAM,MAAM/B,UAAU,IAChE,cAAC,GAAD,CAASH,KAAMkD,KAAYjD,MAAM,SAASiC,MAAM,SAChD,cAAC,GAAD,CAASlC,KAAMmD,KAAgBlD,MAAM,aAAaiC,MAAM,aAE5D,qBAAK9C,UAAU,gBAAf,SACKqD,EAAOM,KAAI,gBAAET,EAAF,EAAEA,GAAF,IAAMW,KAAOG,EAAb,EAAaA,GAAItB,EAAjB,EAAiBA,QAASE,EAA1B,EAA0BA,QAASqB,EAAnC,EAAmCA,UAAnC,OACZ,cAAC,GAAD,CACIf,GAAIA,EAEJrC,MAAOmD,EACPtB,QAASA,EACTE,QAASA,EACTD,KAAM,IAAIuB,KAA0B,KAAZ,OAATD,QAAS,IAATA,OAAA,EAAAA,EAAWE,UAAgBC,eAJrClB,Y,+CCGVmB,OAvDf,WACI,MAAiEC,eAAzDC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,aAAkCC,GAApD,EAAgCC,MAAhC,EAAuCC,UAAaF,QAC9C3E,EAAWC,cAcjB,OACI,sBAAKC,UAAU,WAAf,UACI,sBAAKA,UAAU,kBAAf,UACI,qDACA,cAAC,KAAD,CAAWA,UAAU,iBAAiBO,QAAS,WAAOT,EAASuB,WAGnE,uBAAMuD,SAAUJ,GApBP,SAACK,GACdC,QAAQC,IAAIF,GACZ9F,EAAG+C,WAAW,UAAUkD,IACpB,CACIhB,GAAIa,EAASb,GACbtB,QAASmC,EAASnC,QAClBE,QAASiC,EAASjC,QAClBqB,UAAWjF,IAASQ,UAAUyF,WAAWC,oBAEjDpF,EAASuB,QAWL,UACI,oCACAlD,KAAK,KACLiC,YAAc,KACdC,KAAK,SACDkE,EAAS,KAAM,CAACY,UAAW,MAC9BV,EAAOT,IAAM,mBAAGhE,UAAU,iBAAb,0CAEd,oCACA7B,KAAK,UACLiC,YAAc,UACbC,KAAK,QACAkE,EAAS,UAAW,CAACY,UAAW,MACrCV,EAAO/B,SAAW,mBAAG1C,UAAU,iBAAb,0CAEnB,oCACA7B,KAAK,UACJiC,YAAa,aACbC,KAAK,OACLL,UAAU,oBACLuE,EAAS,UAAU,CAACY,UAAW,MACpCV,EAAO7B,SAAW,mBAAG5C,UAAU,iBAAb,0CAEnB,qBAAKA,UAAU,kBAAf,SACI,cAACkC,EAAA,EAAD,CAAQ7B,KAAK,SAAS+E,QAAQ,YAAYtC,MAAM,UAAU9C,UAAU,kBAApE,2B,OCrBLqF,OA7Bf,WACI,IAAMvF,EAAWC,cAcjB,OACI,qBAAKC,UAAU,QAAf,SACI,sBAAKA,UAAU,kBAAf,UACI,qBAAKE,IAAI,kMACTC,IAAI,KACJ,cAAC+B,EAAA,EAAD,CAAQkD,QAAQ,YAAYtC,MAAM,UAAUvC,QAlBzC,WACXd,EAAK6F,gBAAgB5F,GAChBe,MAAK,YAAa,IAAXpC,EAAU,EAAVA,KACJyB,EAAStB,EACL,CACI+G,YAAalH,EAAKkH,YAClBC,MAAOnH,EAAKmH,MACZ9E,SAAUrC,EAAKqC,eAIxB+E,OAAO,SAAAC,GAAK,OAAIC,MAAMD,EAAM9C,aAO3B,yB,kBCsCDgD,OAlDf,WACE,IAAM1E,EAAoBrB,YAAYyB,GAChCjD,EAAOwB,YAAYf,GACnBgB,EAAWC,cAiBjB,OAfA8B,qBAAU,WACRpC,EAAKoG,oBAAoB,SAAAxH,GACpBA,GACDyB,EAAStB,EACP,CACE+G,YAAalH,EAAKkH,YAClBC,MAAOnH,EAAKmH,MACZ9E,SAAUrC,EAAKqC,iBAMtB,IAGD,cAAC,KAAD,UACKrC,EAID,sBAAK2B,UAAU,MAAf,UACA,cAAC,EAAD,IACA,sBAAKA,UAAU,WAAf,UACE,cAAC,GAAD,IACA,eAAC,KAAD,WACE,cAAC,KAAD,CAAO8F,KAAK,QAAZ,SACE,cAAC,GAAD,MAEF,cAAC,KAAD,CAAOA,KAAK,IAAZ,SACE,cAAC,GAAD,YAIL5E,GAAqB,cAAC,GAAD,OAftB,cAAC,GAAD,OCnCK6E,GAAQC,YAAe,CAClCC,QAAS,CACP1E,KAAM2E,EACN7H,KAAM8H,KCKUC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCVNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUZ,MAAOA,GAAjB,SACE,cAAC,GAAD,QAGJa,SAASC,eAAe,SDqHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMvG,MAAK,SAACwG,GAClCA,EAAaC,iB","file":"static/js/main.584b01b0.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nconst initialState = {\n  user: null,\n  status: 'idle',\n};\n\nexport const userSlice = createSlice({\n  name: 'user',\n  initialState,\n  \n  reducers: {\n    login: (state, action) => {\n      state.user = action.payload;\n    },\n    logout: (state) => {\n      state.user = null;\n    }\n    \n    \n  }\n  \n \n});\n\nexport const { login, logout } = userSlice.actions;\n\nexport const selectUser = (state) => state.user.user;\n\n\nexport default userSlice.reducer;\n","import firebase from 'firebase';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyDVAGJ2xgbbLyAV94ZuDGofWMtQH08mOi0\",\r\n    authDomain: \"email-app-79a7e.firebaseapp.com\",\r\n    projectId: \"email-app-79a7e\",\r\n    storageBucket: \"email-app-79a7e.appspot.com\",\r\n    messagingSenderId: \"372757191935\",\r\n    appId: \"1:372757191935:web:0cefdc1bbb913ecb9080ca\"\r\n  };\r\n\r\n  const firebaseApp = firebase.initializeApp(firebaseConfig);\r\n  const db = firebaseApp.firestore();\r\n  const auth = firebase.auth();\r\n  const provider = new firebase.auth.GoogleAuthProvider();\r\n\r\n  export { db, auth, provider};\r\n","import React from 'react';\r\nimport './Header.css';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport { IconButton, Avatar } from '@material-ui/core';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport AppsIcon from '@material-ui/icons/Apps';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport { useSelector } from 'react-redux';\r\nimport { logout, selectUser } from '../features/userSlice';\r\nimport { useDispatch } from 'react-redux';\r\nimport { auth } from '../firebase/firebase';\r\n\r\n\r\n\r\nfunction Header() {\r\n    const user = useSelector(selectUser);\r\n    const dispatch = useDispatch();\r\n    const signOut = () => {\r\n        auth.signOut().then(() => {\r\n            dispatch(logout(\r\n            ))\r\n        })\r\n       \r\n    };\r\n\r\n    return (\r\n        <div className=\"header\">\r\n            <div className=\"header_left\">\r\n                <IconButton>\r\n                    <MenuIcon/>\r\n                </IconButton>\r\n                <img src=\"https://www.pngitem.com/pimgs/m/75-758641_logo-gmail-png-for-gmail-email-client-mac.png\" alt=\"\"/>\r\n            </div>\r\n            <div className=\"header_middle\">\r\n                <SearchIcon/>\r\n                <input placeholder=\"Search\" type=\"text\"/>\r\n                <ArrowDropDownIcon className=\"header_arrow\"/>\r\n               \r\n            </div>\r\n            <div className=\"header_right\">\r\n                <IconButton>\r\n                    <AppsIcon/>\r\n                </IconButton>\r\n                <IconButton>\r\n                <NotificationsIcon/>\r\n                </IconButton>\r\n                <IconButton>\r\n                <Avatar onClick={signOut} src={user?.photoURL} />\r\n                </IconButton>\r\n               \r\n                \r\n                \r\n\r\n               \r\n            </div>\r\n\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport './Sidebar.css';\r\n\r\nfunction SidebarOption({Icon, title, number, selected}) {\r\n    return (\r\n        <div className={`sidebarOption ${selected && 'sidebarOption--active'}`}>\r\n            <Icon/>\r\n            <h3>{title}</h3>\r\n            <p>{number}</p>            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SidebarOption;\r\n","import { createSlice } from '@reduxjs/toolkit';\n\n\nconst initialState = {\n  selectedMail: null,\n  sendMessageisOpen: false,\n  \n};\n\nexport const mailSlice = createSlice({\n  name: 'mail',\n  initialState,\n\n  reducers: {\n\n    selectMail: (state, actions) => {\n      state.selectedMail = actions.payload;\n    },\n    openSendMessage: (state) => {\n    \n      state.sendMessageisOpen = true;\n    },\n    closeSendMessage: (state) => {\n      state.sendMessageisOpen = false;\n    },\n    \n   \n  },\n \n\n});\n\nexport const {  selectMail, openSendMessage, closeSendMessage  } = mailSlice.actions;\n\n\nexport const selectSendMessageisOpen = (state) => state.mail.sendMessageisOpen;\nexport const selectOpenMail = (state) => state.mail.selectedMail;\n\n\nexport default mailSlice.reducer;\n","import { React, useState, useEffect } from 'react';\r\nimport './Sidebar.css';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { IconButton, Avatar, Button  } from '@material-ui/core';\r\nimport SidebarOption from './SidebarOption';\r\nimport InboxIcon from '@material-ui/icons/Inbox';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport DuoIcon from '@material-ui/icons/Duo';\r\nimport PhoneIcon from '@material-ui/icons/Phone';\r\nimport { useDispatch } from 'react-redux';\r\nimport { openSendMessage } from '../features/mailSlice';\r\nimport { db } from '../firebase/firebase';\r\n\r\nfunction Sidebar() {\r\n    const dispatch = useDispatch();\r\n    const [numbers, setNumbers] = useState(0);\r\n    useEffect(() => {\r\n        db.collection(\"emails\").get().then(function(querySnapshot) {\r\n            setNumbers(querySnapshot.size)      \r\n        });\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"sidebar\">\r\n            <Button \r\n            startIcon={<AddIcon fontSize=\"large\"/>}\r\n            className=\"sidebar_compose\"\r\n            onClick= { () => {dispatch(openSendMessage())}}\r\n            >\r\n                Compose\r\n            </Button>\r\n            <SidebarOption Icon={InboxIcon} \r\n            title=\"Inbox\" \r\n            number={numbers} \r\n            selected={true}/>\r\n            {/*add message reciveing fucntionality*/}\r\n            <div className=\"sidebar_footer\">\r\n                <div className=\"sidebar_footerIcons\">\r\n                    <IconButton>\r\n                        <PersonIcon/>\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <DuoIcon/>\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <PhoneIcon/>\r\n                    </IconButton>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Sidebar;\r\n","import React from 'react';\r\nimport './Mail.css';\r\nimport {  IconButton } from '@material-ui/core';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport ForwardIcon from '@material-ui/icons/Forward';\r\nimport PrintIcon from '@material-ui/icons/Print';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport LabelImportantIcon from '@material-ui/icons/LabelImportant';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport { selectOpenMail } from '../features/mailSlice';\r\n\r\n\r\nfunction Mail() {\r\n    const history = useHistory();\r\n    const selectedMail = useSelector(selectOpenMail);\r\n\r\n    return (\r\n        <div className=\"mail\">\r\n            <div className=\"mail_tools\">\r\n                <div className=\"mail_toolsLeft\">\r\n                    <IconButton>\r\n                        <ArrowBackIcon onClick={() => history.push(\"/\")}/>\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <DeleteIcon/>\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <ForwardIcon/>\r\n                    </IconButton>\r\n                                      \r\n\r\n                </div>\r\n                <div className=\"mail_toolsRight\">\r\n                    <IconButton>\r\n                        <PrintIcon/>\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <ExitToAppIcon/>\r\n                    </IconButton>\r\n                    \r\n                </div>\r\n            </div>\r\n            <div className=\"mail_body\">\r\n                <div className=\"mail_bodyHeader\">\r\n                    <h2>{selectedMail?.subject}</h2>\r\n                    <LabelImportantIcon className=\"mail_important\"/>\r\n                    <p>{\" \"}</p>\r\n                    <p>{selectedMail?.title}</p>\r\n                    <p className=\"mail_time\">{selectedMail?.time}</p>\r\n                </div>\r\n                <div className=\"mail_bodyMessage\">\r\n                    <p>{selectedMail?.message}</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Mail;\r\n","import React from 'react';\r\nimport './MailList.css';\r\n\r\nfunction Section({Icon, title, color, selected}) {\r\n    return (\r\n        <div className={`mailList_sectionOption ${selected && 'mailList_sectionOption--selected'}`} \r\n        style={{\r\n            borderBottom: `3px solid ${color}`,\r\n            color: ` ${selected && color}`,\r\n        }}\r\n        >\r\n            <Icon/>\r\n            <h3>{title}</h3>\r\n\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Section;\r\n","import React from 'react';\r\nimport './MailList.css';\r\nimport { Checkbox, IconButton } from '@material-ui/core';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\nimport { selectMail } from '../features/mailSlice';\r\n\r\nfunction EmailRow({id, title, subject, message, time}) {\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n    const openMail = () => {\r\n        dispatch(\r\n            selectMail({\r\n                id,\r\n                title,\r\n                subject,\r\n                message, \r\n                time,\r\n            })\r\n        )\r\n        history.push(\"/mail\");\r\n    };\r\n\r\n   \r\n    return (\r\n        \r\n        <div  onClick={openMail} className=\"mailList_row\">\r\n            <div className=\"mailList_rowOptions\">\r\n                <Checkbox/>\r\n                <IconButton>\r\n                    <FavoriteIcon/>\r\n                </IconButton>\r\n\r\n            </div>\r\n            <h3 className=\"mailList_rowTitle\">{title}</h3>\r\n\r\n            <div className=\"mailList_rowSubject\">\r\n                <h4>\r\n                    {subject}{\" \"}\r\n                    <span className=\"mailList_rowMessage\">-{message}</span>\r\n                </h4>\r\n            </div>\r\n\r\n            \r\n           <p className=\"mailList_rowTime\">{time}</p>\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default EmailRow;\r\n","import { React, useState, useEffect }from 'react';\r\nimport { Checkbox, IconButton } from '@material-ui/core';\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport RedoIcon from '@material-ui/icons/Redo';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport KeyboardHideIcon from '@material-ui/icons/KeyboardHide';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport InboxIcon from '@material-ui/icons/Inbox';\r\nimport PeopleIcon from '@material-ui/icons/People';\r\nimport LocalOfferIcon from '@material-ui/icons/LocalOffer';\r\nimport Section from './Section';\r\nimport EmailRow from './EmailRow';\r\nimport './MailList.css';\r\nimport { db } from '../firebase/firebase';\r\n\r\nfunction MailList() {\r\n    const [emails, setEmails] = useState([]);\r\n    useEffect(() => {\r\n        db.collection(\"emails\").orderBy(\"timestamp\", \"desc\").onSnapshot(\r\n            (snapshot) => setEmails(\r\n                snapshot.docs.map((doc) => ({\r\n                    id: doc.id,\r\n                    data: doc.data(),\r\n                }))\r\n            )\r\n            );\r\n\r\n    }, []);\r\n    return (\r\n        <div className=\"mailList\">\r\n            <div className=\"mailList_settings\">\r\n                <div className=\"mailList_settingsLeft\">\r\n                    <Checkbox/>\r\n                    <IconButton>\r\n                        <ArrowDropDownIcon/>\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <RedoIcon/>\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <MoreVertIcon/>\r\n                    </IconButton>\r\n                </div>\r\n                <div className=\"mailList_settingsRight\">\r\n                    <IconButton>\r\n                        <KeyboardHideIcon/>\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <SettingsIcon/>\r\n                    </IconButton>\r\n                </div>\r\n                \r\n            </div>\r\n            <div className=\"mailList_section\">\r\n                <Section Icon={InboxIcon} title='Primary' color='red' selected={true}/> \r\n                <Section Icon={PeopleIcon} title='Social' color='blue'/> \r\n                <Section Icon={LocalOfferIcon} title='Promotions' color='green' />  \r\n            </div>\r\n            <div className=\"mailList_list\">\r\n                {emails.map(({id, data:{ to, subject, message, timestamp}}) => (\r\n                <EmailRow\r\n                    id={id}\r\n                    key={id}\r\n                    title={to}\r\n                    subject={subject}\r\n                    message={message}\r\n                    time={new Date(timestamp?.seconds * 1000).toUTCString()}\r\n                />\r\n                ))}\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MailList;\r\n","import React from 'react';\r\nimport './SendMail.css';\r\nimport { Button } from '@material-ui/core';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useDispatch } from 'react-redux';\r\nimport { closeSendMessage } from '../features/mailSlice';\r\nimport { db } from '../firebase/firebase';\r\nimport firebase from 'firebase'; \r\n\r\nfunction SendMail() {\r\n    const { register, handleSubmit, watch, formState: { errors } } = useForm();\r\n    const dispatch = useDispatch();\r\n    const onSubmit = (formData) => {\r\n        console.log(formData);\r\n        db.collection('emails').add(\r\n            {\r\n                to: formData.to,\r\n                subject: formData.subject,\r\n                message: formData.message,\r\n                timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n            });\r\n        dispatch(closeSendMessage());\r\n    };\r\n   \r\n\r\n    return (\r\n        <div className='sendMail'>\r\n            <div className='sendMail_header'>\r\n                <h3>Compose New Message</h3>\r\n                <CloseIcon className='sendMail_close' onClick={() => {dispatch(closeSendMessage())}}/>\r\n\r\n            </div>\r\n            <form onSubmit={handleSubmit(onSubmit)}>\r\n                <input \r\n                name='to' \r\n                placeholder = \"To\"\r\n                type=\"email\" \r\n                {...register('to', {required : true})}/>\r\n                {errors.to && <p className=\"sendMail_error\">* Reciver field is required!</p>}\r\n\r\n                <input \r\n                name='subject' \r\n                placeholder = \"Subject\"\r\n                 type=\"text\" \r\n                 { ...register('subject', {required : true})}/>\r\n                {errors.subject && <p className=\"sendMail_error\">* Subject field is required!</p>}\r\n\r\n                <input \r\n                name='message'\r\n                 placeholder =\"Message...\" \r\n                 type=\"text\" \r\n                 className=\"sendMail_message\" \r\n                 { ...register('message',{required : true})}/>\r\n                {errors.message && <p className=\"sendMail_error\">* Message field is required!</p>}\r\n                \r\n                <div className='sendMail_submit'>\r\n                    <Button type='submit' variant='contained' color='primary' className='sendMail_button'>Send</Button>\r\n                </div>\r\n            </form>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SendMail;\r\n","import React from 'react';\r\nimport { auth, provider } from '../firebase/firebase';\r\nimport { Button } from '@material-ui/core';\r\nimport './Login.css';\r\nimport { useDispatch } from 'react-redux';\r\nimport { login } from '../features/userSlice';\r\n\r\nfunction Login() {\r\n    const dispatch = useDispatch();\r\n    const signIn = () => {\r\n        auth.signInWithPopup(provider)\r\n            .then(({user}) => {\r\n                dispatch(login(\r\n                    {\r\n                        displayName: user.displayName,\r\n                        email: user.email,\r\n                        photoURL: user.photoURL\r\n                    }\r\n                ))\r\n\r\n            }).catch( error => alert(error.message))\r\n    };\r\n    return (\r\n        <div className=\"login\">\r\n            <div className=\"login_container\">\r\n                <img src=\"https://w7.pngwing.com/pngs/105/439/png-transparent-white-and-blue-message-icon-illustration-email-computer-icons-symbol-message-inbox-by-gmail-envelope-miscellaneous-blue-angle-thumbnail.png\"\r\n                alt=\"\" />\r\n                <Button variant=\"contained\" color=\"primary\" onClick={signIn}>\r\n                    Login\r\n                </Button>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login;\r\n","import React, { useEffect } from 'react';\nimport Header from './components/Header';\nimport Sidebar from './components/Sidebar';\nimport Mail from './components/Mail';\nimport MailList from './components/MailList';\nimport SendMail from './components/SendMail';\nimport Login from './components/Login';\nimport './App.css';\nimport { BrowserRouter as Router, Switch, Route, Link} from \"react-router-dom\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectSendMessageisOpen } from './features/mailSlice';\nimport { login, selectUser } from './features/userSlice';\nimport { auth } from './firebase/firebase';\n\n\nfunction App() {\n  const sendMessageisOpen = useSelector(selectSendMessageisOpen);\n  const user = useSelector(selectUser);\n  const dispatch = useDispatch();\n  \n  useEffect(() => {\n    auth.onAuthStateChanged( user => {\n      if(user){\n        dispatch(login(\n          {\n            displayName: user.displayName,\n            email: user.email,\n            photoURL: user.photoURL\n          }\n        ))\n      }\n    })\n   \n  }, [])\n\n  return (\n    <Router>\n      { !user? \n      (\n        <Login/>\n      ): (\n        <div className=\"app\">\n        <Header/>\n        <div className=\"app_body\">\n          <Sidebar/>\n          <Switch>\n            <Route path=\"/mail\">\n              <Mail/>\n            </Route>\n            <Route path=\"/\">\n              <MailList/>\n            </Route>\n          </Switch>\n        </div>\n        {sendMessageisOpen && <SendMail/>}\n    \n\n    </div>\n      )\n    }\n      \n    </Router>\n  );\n}\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\nimport mailReducer from '../features/mailSlice';\nimport userReducer from '../features/userSlice';\n\nexport const store = configureStore({\n  reducer: {\n    mail: mailReducer,\n    user: userReducer,\n  },\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}